plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'com.springpractise'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // the below module will provide libraries like JUnit, Spring Test, AssertJ, Hamcrest, Mockito, JSONassert, JsonPath
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'com.h2database:h2'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.44'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: '3.1.4'
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.1.0'

}


test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/model/**', '**/entity/**']
            )
        }))

    }
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true

            limit {
                minimum = 0.0
            }
        }
    }
}
